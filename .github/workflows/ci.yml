name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Frontend CI
  frontend-ci:
    name: Frontend - Test & Build
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
          
      - name: Install dependencies
        run: |
          cd frontend
          npm ci
          
      - name: Run linting
        run: |
          cd frontend
          npm run lint
          
      - name: Type check
        run: |
          cd frontend
          npx tsc --noEmit
          
      - name: Build application
        run: |
          cd frontend
          npm run build
          
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/.next
          retention-days: 7

  # Backend CI (if backend exists)
  backend-ci:
    name: Backend - Test & Build
    runs-on: ubuntu-latest
    if: hashFiles('backend/**') != ''
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json
          
      - name: Install dependencies
        run: |
          cd backend
          npm ci
          
      - name: Run tests
        run: |
          cd backend
          npm test
        continue-on-error: true
        
      - name: Build backend
        run: |
          cd backend
          npm run build
        continue-on-error: true

  # Security audit
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Audit frontend dependencies
        run: |
          cd frontend
          npm audit --audit-level=moderate
        continue-on-error: true
        
      - name: Audit backend dependencies
        run: |
          cd backend
          npm audit --audit-level=moderate
        continue-on-error: true
        if: hashFiles('backend/**') != ''

  # Deploy to Vercel (only on main branch)
  deploy:
    name: Deploy to Vercel
    runs-on: ubuntu-latest
    needs: [frontend-ci, security-audit]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./frontend
          vercel-args: '--prod' 